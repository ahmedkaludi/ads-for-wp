<?php
/**
 * Generated by the WordPress Meta Box generator
 * at http://jeremyhixon.com/tool/wordpress-meta-box-generator/
 */

function adsforwp_get_meta_post( $value, $post_id = '' ) {
	global $post;
	$field  	= "";
	$default 	= "";

	if ( empty( $post_id ) ) {
		$post_id = $post->ID;
	}

	$default 	= "show"; 
	
	if ( $value === 'adsforwp_incontent_ads_paragraphs') {
		$default 	= "2"; 
	}

	$field = get_post_meta( $post_id, $value, true );

	if ( ! empty( $field ) ) {
		return is_array( $field ) ? stripslashes_deep( $field ) : stripslashes( wp_kses_decode_entities( $field ) );
	} else {
		return $field = $default;
	}
}

function adsforwp_ads_meta_box() {

	$ampforwp_post_types = " ";

	$ampforwp_post_types = adsforwp_post_types();


	foreach ($ampforwp_post_types as $ampforwp_post_type => $value ) {

		add_meta_box(
			'adsforwp_ads_meta_box',
			__( 'Ads on this ' . $value, 'ads-for-wp' ),
			'adsforwp_ads_meta_box_html',
			$ampforwp_post_type,
			'side',
			'default'
		);
	}
}

add_action( 'add_meta_boxes', 'adsforwp_ads_meta_box' );

function adsforwp_ads_meta_box_html( $post ) {
	$ampforwp_post_types = " ";
	wp_nonce_field( '_adsforwp_ads_meta_box_nonce', 'adsforwp_ads_meta_box_nonce' ); ?>

	<input type="text" class="screen-reader-text" id="adsforwp-current-ad-status" value="<?php echo adsforwp_get_meta_post( 'adsforwp_ads_meta_box_ads_on_off' ); ?>">
	<p class="adsforwp-ads-controls">
		<input type="radio" name="adsforwp_ads_meta_box_ads_on_off" id="adsforwp_ads_meta_box_radio_show" value="show" <?php echo ( adsforwp_get_meta_post( 'adsforwp_ads_meta_box_ads_on_off' ) === 'show' ) ? 'checked' : ''; ?>>
		<label for="adsforwp_ads_meta_box_radio_show">Show</label> 
	</p>
	<p class="adsforwp-ads-controls">
		<input type="radio" name="adsforwp_ads_meta_box_ads_on_off" id="adsforwp_ads_meta_box_radio_hide" value="hide" <?php echo ( adsforwp_get_meta_post( 'adsforwp_ads_meta_box_ads_on_off' ) === 'hide' ) ? 'checked' : ''; ?>>
		<label for="adsforwp_ads_meta_box_radio_hide">Hide</label><br>
	</p>

	<div id="adsforwp-all-ads" style="display: none">
		<input hidden type="text" id="current-post-id" value="<?php echo get_the_ID();?>">
		<?php adsforwp_generate_ad_post_type_data()?>
	</div> <?php
}

function adsforwp_generate_ad_post_type_data(){

	$query 		= "";
	$post_id 	= "";
	$count 		= "";
	$ad_type 	= "";
	$visibility = "";
	$paragraph 	= "";
	$all_ads_info = "";
	$selected  	= '';

	$ad_data 			= array();
	$all_ads_from_db 	= array();
	$updated_ads_array 	= array();

	$post_id 		= get_the_ID();
	$all_ads_info 	= (array) adsforwp_get_meta_post( 'adsforwp-advert-data', $post_id );

	if ( ! empty( $all_ads_info ) ) {
	 	$all_ads_info = array_merge($all_ads_info);
	}

	foreach ($all_ads_info as $key => $value) {

		if ( ! empty( $value['ads_id'] ) ) {
			$all_ads_from_db[] 						=  $value['ads_id'];
			$updated_ads_array[$value['ads_id']] 	= $value;
		}
	}

	$count = 0;

	$get_all_ads = get_posts( array( 'post_type' => 'ads-for-wp-ads','posts_per_page' => -1, ) );

	if ( $get_all_ads ) {
		foreach ( $get_all_ads as $ad ) :

		    $ads_post_id = 	$ad->ID;
		    $ad_type 	 =  adsforwp_get_meta_post( 'adsforwp_ads_position', $ads_post_id );
		    $visibility  =  adsforwp_get_meta_post( 'adsforwp_incontent_ads_default', $ads_post_id );
		    $paragraph 	 =  adsforwp_get_meta_post( 'adsforwp_incontent_ads_paragraphs', $ads_post_id );

			if ( 'hide' === $ad_type ) {

				if ( $all_ads_from_db ) {
					$ad_found = in_array($ads_post_id, $all_ads_from_db);
				}

				if( $ad_found ){
				    if ( ! empty(  $updated_ads_array[$ads_post_id]['visibility'] ) ) {
				    	$visibility = $updated_ads_array[$ads_post_id]['visibility'] ;
				    }
				    if ( ! empty(  $updated_ads_array[$ads_post_id]['paragraph'] ) ) {
				     	$paragraph = $updated_ads_array[$ads_post_id]['paragraph'] ;
				    }
				}

			    echo '<div data-ads-id="'.$ads_post_id.'" id="ad-control-child-'.$count.'">'; ?>
				   	Ad name: <?php echo esc_attr( $ad->post_title ); ?> <br />
					
					<select  data-ad-visibility="<?php echo $visibility ?>" name="" class="ads-visibility widefat" id="ad-visibility-<?php echo $count ?>" disabled="disabled">

						<option value="show" <?php if ( $visibility == "show" ) echo 'selected="selected"'; ?>>Show</option> 				
						<option value="hide" <?php if ( $visibility == "hide" ) echo 'selected="selected"'; ?>>Hide</option>
					</select>
					
			   		<label for="ad-paragraph-<?php echo $count ?>"> Paragraph Position:</label>
			   		<input class="small-text" id="ad-paragraph-<?php echo $count ?>" data-ad-paragraph="<?php echo $paragraph ?>" type="number" disabled="disabled" value="<?php echo $paragraph ?>" >

			   		<span class='edit-ads'> Edit</span>
			   		<span class="save-ads" style="display:none"> Save</span>
			   		<div class="spinner"></div>
			   		<br /><br />
			   		<?php

				echo "</div>";
			}
			$count++;
		endforeach;  
		wp_reset_postdata();
	}
}

function adsforwp_ads_meta_box_save( $post_id ) {

	// Return if user does not have proper permission or security nonce is failed 
	if ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE ) return;
	if ( ! isset( $_POST['adsforwp_ads_meta_box_nonce'] ) || ! wp_verify_nonce( $_POST['adsforwp_ads_meta_box_nonce'], '_adsforwp_ads_meta_box_nonce' ) ) return;
	if ( ! current_user_can( 'edit_post', $post_id ) ) return;

	// Save Data
	if ( isset( $_POST['adsforwp_ads_meta_box_ads_on_off'] ) )
		update_post_meta( $post_id, 'adsforwp_ads_meta_box_ads_on_off', esc_attr( $_POST['adsforwp_ads_meta_box_ads_on_off'] ) );

	if ( isset( $_POST["adsforwp_ads_position"] ) )
		update_post_meta( $post_id, "adsforwp_ads_position", esc_attr( $_POST["adsforwp_ads_position"] ) );

	// Incontent Sub Controls
	if ( isset( $_POST["adsforwp_incontent_ads_default"] ) )
		update_post_meta( $post_id, "adsforwp_incontent_ads_default", esc_attr( $_POST["adsforwp_incontent_ads_default"] ) );

	if ( isset( $_POST["adsforwp_incontent_ads_paragraphs"] ) )
		update_post_meta( $post_id, "adsforwp_incontent_ads_paragraphs", esc_attr( $_POST["adsforwp_incontent_ads_paragraphs"] ) );
}
add_action( 'save_post', 'adsforwp_ads_meta_box_save' );

/*
	Usage: adsforwp_get_meta_post( 'adsforwp_ads_meta_box_ads_on_off' );
*/

/*
 * Creating ShortCode meta box for the users to get the ad code.
 */
add_action( 'add_meta_boxes', 'adsforwp_generate_ads_shortcode' );
function adsforwp_generate_ads_shortcode(){

	add_meta_box(
		'adsforwp_ads_shortcode',
		esc_html__( 'Ad Code ', 'ads-for-wp' ),
		'adsforwp_ads_shortcode_html',
		'ads-for-wp-ads',
		'side',
		'high'
	);
}

//  

function adsforwp_ads_shortcode_html( $post ) {
	wp_nonce_field( '_adsforwp_ads_meta_box_nonce', 'adsforwp_ads_meta_box_nonce' ); ?>
	
	<input type="text" class="screen-reader-text" id="adsforwp-current-ad-type" value="<?php echo adsforwp_get_meta_post( 'adsforwp_ads_position' );?>">
	<p>
		<input type="radio" name="adsforwp_ads_position" id="adsforwp_ads_position_global" value="show" <?php echo ( adsforwp_get_meta_post( 'adsforwp_ads_position' ) === 'show' ) ? 'checked' : ''; ?>>
		<label for="adsforwp_ads_position_global"> Global </label> 
		
		<p><code id="adsforwp_position_global_code"> [ads-for-wp ads-id="<?php echo get_the_ID(); ?>"]</code></p> 

	</p>
	<div>
		<input type="radio" name="adsforwp_ads_position" id="adsforwp_ads_position_specific" value="hide" <?php echo ( adsforwp_get_meta_post( 'adsforwp_ads_position' ) === 'hide' ) ? 'checked' : ''; ?>>
		<label for="adsforwp_ads_position_specific"> Incontent </label> 

		<div id="adsforwp_ads_position_specific_controls" style="display: none">
			<div>
				<p> Default Ads </p>
				<p class="incontent-radio">
					<input type="radio" name="adsforwp_incontent_ads_default" id="adsforwp_incontent_ads_default_show" value="show" <?php echo ( adsforwp_get_meta_post( 'adsforwp_incontent_ads_default' ) === 'show' ) ? 'checked' : ''; ?>>
					<label for="adsforwp_incontent_ads_default_show"> Show </label> 

					<input type="radio" name="adsforwp_incontent_ads_default" id="adsforwp_incontent_ads_default_hide" value="hide" <?php echo ( adsforwp_get_meta_post( 'adsforwp_incontent_ads_default' ) === 'hide' ) ? 'checked' : ''; ?>>
					<label for="adsforwp_incontent_ads_default_hide"> Hide </label> 
				</p>
 
				<p> <label for="adsforwp_incontent_ads_paragraphs">Show ads after </label>
					<input type="number" max="30" min="1" value="<?php echo adsforwp_get_meta_post( 'adsforwp_incontent_ads_paragraphs' );?>" id="adsforwp_incontent_ads_paragraphs" class="ads-paragraphs small-text"  name="adsforwp_incontent_ads_paragraphs">
					<label for="adsforwp_incontent_ads_paragraphs">paragraphs. </label>
					
				</p>
			</div>
		</div>

	</div>

	

	<?php
}


function adsforwp_change_button_text($translation, $text, $domain) {
        global $post;

    if ($post->post_type == 'ads-for-wp-ads') {
        $translations = &get_translations_for_domain( 'ads-for-wp' );
        if ( $text == 'Publish') {
            return $translations->translate( 'Publish Ad' );
        }
        if ( $text == 'Schedule') {
            return $translations->translate( 'Schedule Ad' );
        }
        if ( $text == 'Update') {
            return $translations->translate( 'Update Ad' );
        }
        if ( $text == 'Save Draft') {
            return $translations->translate( 'Save Ad' );
        }
    }
    return $translation;
}
add_filter('gettext', 'adsforwp_change_button_text', 10, 4);